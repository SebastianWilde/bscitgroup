// <auto-generated />
using bscitgroup.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace bscitgroup.Migrations
{
    [DbContext(typeof(bscitgroupContext))]
    [Migration("20180208180611_Complex")]
    partial class Complex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("bscitgroup.Models.Categorias", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int?>("PersonaDNI");

                    b.HasKey("ID");

                    b.HasIndex("PersonaDNI");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("bscitgroup.Models.Persona", b =>
                {
                    b.Property<int>("DNI");

                    b.Property<string>("Apellido")
                        .IsRequired();

                    b.Property<string>("Celular")
                        .IsRequired();

                    b.Property<string>("Ciudad")
                        .IsRequired();

                    b.Property<string>("Correo")
                        .IsRequired();

                    b.Property<string>("Institucion")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("Pais")
                        .IsRequired();

                    b.Property<string>("Profesion")
                        .IsRequired();

                    b.Property<string>("Telefono");

                    b.HasKey("DNI");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("bscitgroup.Models.PersonaServicioDetalle", b =>
                {
                    b.Property<int>("PersonaServicioDetalleID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Inscripcion");

                    b.Property<bool>("Participacion");

                    b.Property<int>("PersonaID");

                    b.Property<int>("ServicioDetalleID");

                    b.Property<int?>("ServicioID");

                    b.HasKey("PersonaServicioDetalleID");

                    b.HasIndex("PersonaID");

                    b.HasIndex("ServicioDetalleID");

                    b.HasIndex("ServicioID");

                    b.ToTable("PersonaServicioDetalle");
                });

            modelBuilder.Entity("bscitgroup.Models.Servicio", b =>
                {
                    b.Property<int>("ServicioID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CategoriaID");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("Objetivo");

                    b.Property<string>("Tipo")
                        .IsRequired();

                    b.HasKey("ServicioID");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("bscitgroup.Models.ServicioDetalle", b =>
                {
                    b.Property<int>("ServicioDetalleId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Costo")
                        .HasColumnType("money");

                    b.Property<DateTime>("FechaFin");

                    b.Property<DateTime>("FechaInicio");

                    b.Property<DateTime>("HoraFin");

                    b.Property<DateTime>("HoraInico");

                    b.Property<string>("Modalidad")
                        .IsRequired();

                    b.Property<int?>("ServicioID");

                    b.HasKey("ServicioDetalleId");

                    b.HasIndex("ServicioID");

                    b.ToTable("ServicioDetalle");
                });

            modelBuilder.Entity("bscitgroup.Models.Categorias", b =>
                {
                    b.HasOne("bscitgroup.Models.Persona")
                        .WithMany("Intereses")
                        .HasForeignKey("PersonaDNI");
                });

            modelBuilder.Entity("bscitgroup.Models.PersonaServicioDetalle", b =>
                {
                    b.HasOne("bscitgroup.Models.Persona", "Persona")
                        .WithMany("PersonaServicioDetalles")
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("bscitgroup.Models.ServicioDetalle", "ServicioDetalle")
                        .WithMany()
                        .HasForeignKey("ServicioDetalleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("bscitgroup.Models.Servicio")
                        .WithMany("PersonaServicioDetalles")
                        .HasForeignKey("ServicioID");
                });

            modelBuilder.Entity("bscitgroup.Models.Servicio", b =>
                {
                    b.HasOne("bscitgroup.Models.Categorias", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID");
                });

            modelBuilder.Entity("bscitgroup.Models.ServicioDetalle", b =>
                {
                    b.HasOne("bscitgroup.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioID");
                });
#pragma warning restore 612, 618
        }
    }
}
