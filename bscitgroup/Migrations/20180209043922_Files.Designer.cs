// <auto-generated />
using bscitgroup.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace bscitgroup.Migrations
{
    [DbContext(typeof(bscitgroupContext))]
    [Migration("20180209043922_Files")]
    partial class Files
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("bscitgroup.Models.Categorias", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int?>("PersonaDNI");

                    b.HasKey("ID");

                    b.HasIndex("PersonaDNI");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("bscitgroup.Models.Curso", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Certificacion");

                    b.Property<string>("Contenido")
                        .IsRequired();

                    b.Property<string>("Contenido2");

                    b.Property<string>("EContenido1");

                    b.Property<string>("EContenido2");

                    b.Property<DateTime>("Fechafin");

                    b.Property<DateTime>("Fechainicio");

                    b.Property<byte[]>("ImagenCurso");

                    b.Property<string>("ImagenCurso2");

                    b.Property<string>("Informe");

                    b.Property<string>("Informe2");

                    b.Property<string>("Instructor");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("Objetivo1");

                    b.Property<string>("Objetivo2");

                    b.Property<string>("Objetivo3");

                    b.Property<string>("Objetivo4");

                    b.Property<string>("Objetivo5");

                    b.Property<decimal>("Pago");

                    b.Property<string>("Publico");

                    b.HasKey("ID");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("bscitgroup.Models.File", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Contenido");

                    b.Property<int>("CursoId");

                    b.Property<int>("FileType");

                    b.Property<string>("TipoContenido");

                    b.HasKey("FileId");

                    b.HasIndex("CursoId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("bscitgroup.Models.Persona", b =>
                {
                    b.Property<int>("DNI")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido")
                        .IsRequired();

                    b.Property<string>("Celular")
                        .IsRequired();

                    b.Property<string>("Ciudad")
                        .IsRequired();

                    b.Property<string>("Correo")
                        .IsRequired();

                    b.Property<int?>("CursoID");

                    b.Property<string>("Institucion")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("Pais")
                        .IsRequired();

                    b.Property<string>("Profesion")
                        .IsRequired();

                    b.Property<string>("Telefono");

                    b.HasKey("DNI");

                    b.HasIndex("CursoID");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("bscitgroup.Models.Categorias", b =>
                {
                    b.HasOne("bscitgroup.Models.Persona")
                        .WithMany("Intereses")
                        .HasForeignKey("PersonaDNI");
                });

            modelBuilder.Entity("bscitgroup.Models.File", b =>
                {
                    b.HasOne("bscitgroup.Models.Curso", "Curso")
                        .WithMany("Files")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("bscitgroup.Models.Persona", b =>
                {
                    b.HasOne("bscitgroup.Models.Curso")
                        .WithMany("Personas")
                        .HasForeignKey("CursoID");
                });
#pragma warning restore 612, 618
        }
    }
}
